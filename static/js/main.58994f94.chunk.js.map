{"version":3,"sources":["components/Header.tsx","components/Movie.tsx","components/Search.tsx","components/App.tsx","components/config.ts","index.tsx"],"names":["Header","text","className","Movie","movie","poster","Poster","Title","width","alt","src","Year","Search","props","useState","searchValue","setSearchValue","value","onChange","event","target","type","onClick","preventDefault","search","MOVIE_API_URL","initialState","loading","movies","errorMessage","reducer","state","action","payload","error","App","React","useReducer","dispatch","useEffect","fetch","then","response","json","jsonResponse","Response","Error","map","index","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAgBeA,MAVf,YAAqC,IAApBC,EAAmB,EAAnBA,KACb,OACI,2BACI,0BAAQC,UAAU,cACd,0BAAKD,MCqBNE,MAlBf,YAAsC,IAArBC,EAAoB,EAApBA,MACPC,EACe,QAAjBD,EAAME,OAJV,qGAIyDF,EAAME,OAC/D,OACI,yBAAKJ,UAAU,SACX,4BAAKE,EAAMG,OACX,6BACI,yBACIC,MAAM,MACNC,IAAG,4BAAuBL,EAAMG,OAChCG,IAAKL,KAGb,+BAAKD,EAAMO,KAAX,OCQGC,MA5Bf,SAAgBC,GAAoB,IAAD,EACOC,mBAAS,IADhB,mBACxBC,EADwB,KACXC,EADW,KAgB/B,OACI,0BAAMd,UAAU,UACZ,2BACIe,MAAOF,EACPG,SAjBqB,SAACC,GAC9BH,EAAeG,EAAMC,OAAOH,QAiBpBI,KAAK,SAET,2BAAOC,QAZY,SAACH,GACxBA,EAAMI,iBACNV,EAAMW,OAAOT,GALbC,EAAe,KAeyBK,KAAK,SAASJ,MAAM,aCtB9DQ,G,MAAa,gDCPI,aDSjBC,EAAe,CACnBC,SAAQ,EACRC,OAAO,GACPC,aAAa,MAeTC,EAAU,SAACC,EAAmBC,GAElC,OAAOA,EAAOX,MACZ,IAR0B,wBASxB,OAAO,2BACFU,GADL,IAEEJ,SAAS,EACTE,aAAc,OAElB,IAb0B,wBAcxB,OAAO,2BACFE,GADL,IAEEJ,SAAS,EACTC,OAAQI,EAAOC,SAAW,KAE9B,IAlB0B,wBAmBxB,OAAO,2BACFF,GADL,IAEEJ,SAAQ,EACRE,aAAcG,EAAOE,QAEvB,QACE,OAAOH,IA8DAI,MA1Df,WAAgB,IAAD,EACaC,IAAMC,WAAWP,EAASJ,GADvC,mBACNK,EADM,KACCO,EADD,KAGbC,qBAAU,WACRC,MAAMf,GACLgB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJN,EAAS,CACPjB,KAtCsB,wBAuCtBY,QAASW,EAAahC,cAGzB,IAEH,IAsBOgB,EAAiCG,EAAjCH,OAAQC,EAAyBE,EAAzBF,aAAcF,EAAWI,EAAXJ,QAC7B,OACE,yBAAKzB,UAAU,OACb,kBAAC,EAAD,CAAQD,KAAK,8BACb,kBAAC,EAAD,CAAQuB,OA1BG,SAACT,GACduB,EAAS,CACPjB,KA/CwB,0BAkD1BmB,MAAM,8BAAD,OAA+BzB,EAA/B,mBCxEc,aDyElB0B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEyB,SAA1BA,EAAaC,SACdP,EAAS,CACPjB,KAvDoB,wBAwDpBY,QAASW,EAAahC,SAGxB0B,EAAS,CACPjB,KA3DoB,wBA4DpBa,MAAOU,EAAaE,cAUxB,uBAAG5C,UAAU,aAAb,yCACA,yBAAKA,UAAU,UACZyB,IAAYE,EACX,6CACEA,EACF,yBAAK3B,UAAU,gBAAgB2B,GAE/BD,EAAOmB,KAAI,SAAC3C,EAAU4C,GAAX,OACT,kBAAC,EAAD,CAAOC,IAAG,UAAKD,EAAL,YAAc5C,EAAMG,OAASH,MAAOA,UEhG1D8C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.58994f94.chunk.js","sourcesContent":["import * as React from 'react'\n\ninterface HeaderProps {\n    text : string\n}\n\nfunction Header({text}:HeaderProps) {\n    return (\n        <div>\n            <header className=\"App-header\">\n                <h2>{text}</h2>\n            </header>\n        </div>\n    )\n}\n\nexport default Header\n","import  React from 'react'\n\ninterface MovieProps {\n    movie : {\n        Poster:string,\n        Title:string,\n        Year:string\n    }\n}\n\nconst DEFAULT_PLACEHOLDER_IMAGE =\n    \"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\";\n\nfunction Movie({ movie }:MovieProps) {\n    const poster = \n        movie.Poster === \"N/A\" ? DEFAULT_PLACEHOLDER_IMAGE : movie.Poster;\n    return (\n        <div className=\"movie\">\n            <h2>{movie.Title}</h2>\n            <div>\n                <img\n                    width=\"200\"\n                    alt={`The movie titled: ${movie.Title}`}\n                    src={poster}\n                />\n            </div>\n            <p>({movie.Year})</p>            \n        </div>\n    )\n}\n\nexport default Movie\n","import React,{useState} from 'react'\n\ninterface SearchProps {\n    search: (searchValue:string) => void;\n}\n\nfunction Search(props:SearchProps) {\n    const [searchValue, setSearchValue] = useState(\"\");\n\n    const handleSearchInputChanges = (event:React.ChangeEvent<HTMLInputElement>) => {\n        setSearchValue(event.target.value);\n    }\n\n    const resetInputField = () => {\n        setSearchValue(\"\");\n    }\n\n    const callSearchFunction = (event:React.MouseEvent<HTMLInputElement, MouseEvent>) => {\n        event.preventDefault();\n        props.search(searchValue);\n        resetInputField();\n    }\n    return (\n        <form className=\"search\">\n            <input\n                value={searchValue}\n                onChange={handleSearchInputChanges}\n                type=\"text\"\n            />\n            <input onClick={callSearchFunction} type=\"submit\" value=\"SEARCH\" />\n        </form>\n    )\n}\n\nexport default Search\n","import React,{useEffect} from 'react';\nimport { API_KEY } from \"./config\";\nimport Header from \"./Header\";\nimport Movie from \"./Movie\";\nimport Search from \"./Search\";\nimport './App.css';\n\nconst MOVIE_API_URL = `https://www.omdbapi.com/?s=man&apikey=${API_KEY}`;\n\nconst initialState = {\n  loading:true,\n  movies:[],\n  errorMessage:null\n}\n\ninterface ReducerState {\n  loading:boolean,\n  movies:[],\n  errorMessage:null\n\n}\n\nconst SEARCH_MOVIES_REQUEST = \"search_movies_request\";\nconst SEARCH_MOVIES_SUCCESS = \"search_movies_success\";\nconst SEARCH_MOVIES_FAILURE = \"search_movies_failure\";\n\n\nconst reducer = (state:ReducerState,action:any) => {\n  \n  switch(action.type) {\n    case SEARCH_MOVIES_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        errorMessage: null\n      };\n    case SEARCH_MOVIES_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        movies: action.payload || []\n      };\n    case SEARCH_MOVIES_FAILURE:\n      return {\n        ...state,\n        loading:false,\n        errorMessage: action.error\n      };\n      default:\n        return state;\n    \n  }\n}\nfunction App() {\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  useEffect(() => {\n    fetch(MOVIE_API_URL)\n    .then(response => response.json())\n    .then(jsonResponse => {\n      dispatch({\n        type:SEARCH_MOVIES_SUCCESS,\n        payload: jsonResponse.Search\n      });\n    });\n  }, []);\n\n  const search = (searchValue:string) => {\n    dispatch({\n      type:SEARCH_MOVIES_REQUEST\n    });\n\n    fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=${API_KEY}`)\n    .then(response => response.json())\n    .then(jsonResponse => {    \n            \n      if(jsonResponse.Response === \"True\") {\n        dispatch({\n          type:SEARCH_MOVIES_SUCCESS,\n          payload: jsonResponse.Search\n        });\n      } else {\n        dispatch({\n          type:SEARCH_MOVIES_FAILURE,\n          error: jsonResponse.Error\n        });\n      }\n    });\n  };\n  const {movies, errorMessage, loading} = state;\n  return (\n    <div className=\"App\">\n      <Header text=\"영화 검색\"/>\n      <Search search={search}/>\n      <p className=\"App-intro\">Sharing a few of our favourite movies</p>\n      <div className=\"movies\">\n        {loading && !errorMessage ? (\n          <span>loading... </span>\n        ) : errorMessage ? (\n          <div className=\"errorMessage\">{errorMessage}</div>\n        ) : (\n          movies.map((movie:any,index:number) => (\n            <Movie key={`${index}-${movie.Title}`} movie={movie}/>\n          ))\n        )}\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","export const API_KEY = \"4a3b711b\";","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}